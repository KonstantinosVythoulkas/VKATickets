{"version":3,"file":"js/autocomplete_departments-6bc9c9c1009d63333414.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/autocomplete_departments.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/autocomplete_departments.js\");\n","function autocomplete(inp, arr) {\r\n    /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n    var currentFocus;\r\n    /*execute a function when someone writes in the text field:*/\r\n    inp.addEventListener(\"input\", function(e) {\r\n        var a, b, i, val = this.value;\r\n        /*close any already open lists of autocompleted values*/\r\n        closeAllLists();\r\n        if (!val) { return false;}\r\n        currentFocus = -1;\r\n        /*create a DIV element that will contain the items (values):*/\r\n        a = document.createElement(\"DIV\");\r\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n        a.setAttribute(\"class\", \"autocomplete-items\");\r\n        /*append the DIV element as a child of the autocomplete container:*/\r\n        this.parentNode.appendChild(a);\r\n        /*for each item in the array...*/\r\n        for (i = 0; i < arr.length; i++) {\r\n          /*check if the item starts with the same letters as the text field value:*/\r\n          if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n            /*create a DIV element for each matching element:*/\r\n            b = document.createElement(\"DIV\");\r\n            /*make the matching letters bold:*/\r\n            b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n            b.innerHTML += arr[i].substr(val.length);\r\n            /*insert a input field that will hold the current array item's value:*/\r\n            b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n            /*execute a function when someone clicks on the item value (DIV element):*/\r\n            b.addEventListener(\"click\", function(e) {\r\n                /*insert the value for the autocomplete text field:*/\r\n                inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                /*close the list of autocompleted values,\r\n                (or any other open lists of autocompleted values:*/\r\n                closeAllLists();\r\n            });\r\n            a.appendChild(b);\r\n          }\r\n        }\r\n    });\r\n    /*execute a function presses a key on the keyboard:*/\r\n    inp.addEventListener(\"keydown\", function(e) {\r\n        var x = document.getElementById(this.id + \"autocomplete-list\");\r\n        if (x) x = x.getElementsByTagName(\"div\");\r\n        if (e.keyCode == 40) {\r\n          /*If the arrow DOWN key is pressed,\r\n          increase the currentFocus variable:*/\r\n          currentFocus++;\r\n          /*and and make the current item more visible:*/\r\n          addActive(x);\r\n        } else if (e.keyCode == 38) { //up\r\n          /*If the arrow UP key is pressed,\r\n          decrease the currentFocus variable:*/\r\n          currentFocus--;\r\n          /*and and make the current item more visible:*/\r\n          addActive(x);\r\n        } else if (e.keyCode == 13) {\r\n          /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n          e.preventDefault();\r\n          if (currentFocus > -1) {\r\n            /*and simulate a click on the \"active\" item:*/\r\n            if (x) x[currentFocus].click();\r\n          }\r\n        }\r\n    });\r\n    function addActive(x) {\r\n      /*a function to classify an item as \"active\":*/\r\n      if (!x) return false;\r\n      /*start by removing the \"active\" class on all items:*/\r\n      removeActive(x);\r\n      if (currentFocus >= x.length) currentFocus = 0;\r\n      if (currentFocus < 0) currentFocus = (x.length - 1);\r\n      /*add class \"autocomplete-active\":*/\r\n      x[currentFocus].classList.add(\"autocomplete-active\");\r\n    }\r\n    function removeActive(x) {\r\n      /*a function to remove the \"active\" class from all autocomplete items:*/\r\n      for (var i = 0; i < x.length; i++) {\r\n        x[i].classList.remove(\"autocomplete-active\");\r\n      }\r\n    }\r\n    function closeAllLists(elmnt) {\r\n      /*close all autocomplete lists in the document,\r\n      except the one passed as an argument:*/\r\n      var x = document.getElementsByClassName(\"autocomplete-items\");\r\n      for (var i = 0; i < x.length; i++) {\r\n        if (elmnt != x[i] && elmnt != inp) {\r\n          x[i].parentNode.removeChild(x[i]);\r\n        }\r\n      }\r\n    }\r\n    /*execute a function when someone clicks in the document:*/\r\n    document.addEventListener(\"click\", function (e) {\r\n        closeAllLists(e.target);\r\n    });\r\n  }\r\n  \r\n  /*An array containing all the country names in the world:*/\r\n  var countries = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua & Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia & Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin Islands\",\"Brunei\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\"Central Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\"Netherlands Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Korea\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre & Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts & Nevis\",\"St Lucia\",\"St Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor L'Este\",\"Togo\",\"Tonga\",\"Trinidad & Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks & Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican City\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];\r\n  \r\n  /*initiate the autocomplete function on the \"myInput\" element, and pass along the countries array as possible autocomplete values:*/\r\n  autocomplete(document.getElementById(\"myInput\"), countries);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClsourceRoot":""}